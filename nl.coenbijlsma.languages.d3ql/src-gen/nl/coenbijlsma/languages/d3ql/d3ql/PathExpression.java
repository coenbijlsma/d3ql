/**
 * generated by Xtext 2.9.2
 */
package nl.coenbijlsma.languages.d3ql.d3ql;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Path Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link nl.coenbijlsma.languages.d3ql.d3ql.PathExpression#getHead <em>Head</em>}</li>
 *   <li>{@link nl.coenbijlsma.languages.d3ql.d3ql.PathExpression#getTail <em>Tail</em>}</li>
 * </ul>
 *
 * @see nl.coenbijlsma.languages.d3ql.d3ql.D3qlPackage#getPathExpression()
 * @model
 * @generated
 */
public interface PathExpression extends EObject
{
  /**
   * Returns the value of the '<em><b>Head</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Head</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Head</em>' reference.
   * @see #setHead(Named)
   * @see nl.coenbijlsma.languages.d3ql.d3ql.D3qlPackage#getPathExpression_Head()
   * @model
   * @generated
   */
  Named getHead();

  /**
   * Sets the value of the '{@link nl.coenbijlsma.languages.d3ql.d3ql.PathExpression#getHead <em>Head</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Head</em>' reference.
   * @see #getHead()
   * @generated
   */
  void setHead(Named value);

  /**
   * Returns the value of the '<em><b>Tail</b></em>' containment reference list.
   * The list contents are of type {@link nl.coenbijlsma.languages.d3ql.d3ql.PathElement}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Tail</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Tail</em>' containment reference list.
   * @see nl.coenbijlsma.languages.d3ql.d3ql.D3qlPackage#getPathExpression_Tail()
   * @model containment="true"
   * @generated
   */
  EList<PathElement> getTail();

} // PathExpression
